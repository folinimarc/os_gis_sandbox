volumes:
  # Persists all geoserver related data and configuration.
  geoserver_data:
  # Persists database content.
  postgis_data:
  # Persists database connections and settings.
  pgadmin_data:
  # Persists home directory with all notebook and user created content.
  jupyterlabgeoenv_data:
  # Persists packages downloaded for requirements-override.txt to restore from
  # in case of no internet connection.
  jupyterlabgeoenv_pip_overwrite_download:
  # Persists JupyterLab application, user and workspaces settings.
  jupyterlabgeoenv_settings_application:
  jupyterlabgeoenv_settings_user:
  jupyterlabgeoenv_settings_workspace:
  # Used to share data from content container with other components.
  content_data:

services:
  caddy:
    container_name: caddy
    image: caddy:${OSGS_CADDY_VERSION}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy:/etc/caddy:ro
    environment:
      OSGS_HOSTNAME: ${OSGS_HOSTNAME}


  postgis:
    container_name: postgis
    image: postgis/postgis:${OSGS_POSTGIS_VERSION}
    volumes:
      - postgis_data:/var/lib/postgresql/data
    ports:
      - ${OSGS_POSTGIS_PORT}:5432
    environment:
      - "PGUSER=${OSGS_USERNAME}"
      - "POSTGRES_USER=${OSGS_USERNAME}"
      - "OSGS_DB_NAME=${OSGS_DB_NAME}"
      - "POSTGRES_PASSWORD=${OSGS_PASSWORD}"
    shm_size: 256MB

  geoserver:
    container_name: geoserver
    image: kartoza/geoserver:${OSGS_GEOSERVER_VERSION}
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
      - content_data:/opt/geoserver/data_dir/${OSGS_CONTENT_MOUNT_FOLDER_NAME}
      - ${OSGS_HOST_MOUNT_PATH}:/opt/geoserver/data_dir/${OSGS_HOST_MOUNT_FOLDER_NAME}
    expose:
      - "8080"
    environment:
      - "GEOSERVER_DATA_DIR=/opt/geoserver/data_dir"
      - "GEOWEBCACHE_CACHE_DIR=/opt/geoserver/data_dir/gwc"
      - "GEOSERVER_ADMIN_USER=${OSGS_USERNAME}"
      - "GEOSERVER_ADMIN_PASSWORD=${OSGS_PASSWORD}"
      - "INITIAL_MEMORY=${OSGS_GEOSERVER_INITIAL_MEMORY}"
      - "MAXIMUM_MEMORY=${OSGS_GEOSERVER_MAXIMUM_MEMORY}"
      - "SAMPLE_DATA=${OSGS_GEOSERVER_SAMPLE_DATA}"
      - "STABLE_EXTENSIONS=${OSGS_GEOSERVER_STABLE_EXTENSIONS}"
      - "COMMUNITY_EXTENSIONS=${OSGS_GEOSERVER_COMMUNITY_EXTENSIONS}"
      - "TOMCAT_EXTRAS=false"
      - "ROOT_WEBAPP_REDIRECT=true"
      - "RECREATE_DATADIR=false"

  pgadmin:
    container_name: pgadmin
    image: "dpage/pgadmin4:${OSGS_PGADMIN_VERSION}"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    expose:
      - "80"
      - "443"
    environment:
      PGADMIN_DEFAULT_EMAIL: not_used_due_to_basic_auth_in_caddy@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: but_still_required_by_pgadmin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'

  jupyterlab:
    container_name: jupyterlab
    image: ghcr.io/folinimarc/os_gis_sandbox/jupyterlabgeoenv:${OSGS_JUPYTERLABGEOENV_VERSION}
    volumes:
      - jupyterlabgeoenv_data:/sandbox
      - jupyterlabgeoenv_settings_application:/usr/local/share/jupyter/lab
      - jupyterlabgeoenv_settings_user:/root/.jupyter/lab/user-settings
      - jupyterlabgeoenv_settings_workspace:/root/.jupyter/lab/workspaces
      - jupyterlabgeoenv_pip_overwrite_download:/pip_overwrite_requirements_download
      - content_data:/sandbox/${OSGS_CONTENT_MOUNT_FOLDER_NAME}
      - ${OSGS_HOST_MOUNT_PATH}:/sandbox/${OSGS_HOST_MOUNT_FOLDER_NAME}
    expose:
      - "8888"
    environment:
      - "HOME_DIR_PERSISTED=true"
    command:
      [
        "jupyter",
        "lab",
        "--ip",
        "0.0.0.0",
        "--port",
        "8888",
        "--allow-root",
        "--no-browser",
        "--autoreload",
        "--LabApp.token=''",
        "--ServerApp.base_url=/jupyterlab"
      ]

  content:
    container_name: content-container
    image: ghcr.io/folinimarc/os_gis_sandbox/content:${OSGS_CONTENT_VERSION}
    volumes:
      - content_data:/shared_content

  hub:
    container_name: hub
    image: ghcr.io/folinimarc/os_gis_sandbox/hub:${HUB_VERSION}
    expose:
      - "5000"
    command:
      [
        "gunicorn",
        "--workers",
        "2",
        "--threads",
        "2",
        "--worker-class",
        "gthread",
        "--bind",
        "0.0.0.0:5000",
        "app:app",
      ]
    environment:
      - "CARD_1_TITLE=JupyterLab-GeoEnv"
      - "CARD_1_DESCRIPTION=A JupyterLab environment pre-configured to explore GDAL's capabilities and the Python geo-ecosystem. Data stories and more content is located in directory ${OSGS_CONTENT_MOUNT_FOLDER_NAME:-sandbox_content}. Access to host file system is possible through ${OSGS_HOST_MOUNT_FOLDER_NAME}. Start-up might take some seconds, be patient."
      - "CARD_1_HREF=Open,/jupyterlab/"
      - "CARD_2_TITLE=pgAdmin"
      - "CARD_2_DESCRIPTION=pgAdmin provides a graphical user interface to interact with PostgreSQL/PostGIS databases."
      - "CARD_2_HREF=Open,/pgadmin/"
      - "CARD_3_TITLE=PostGIS"
      - "CARD_3_DESCRIPTION=PostGIS is an extension for postgreSQL that turns it into a spatial database. To interact use pgAdmin or psql from the terminal of JupyterLab-GeoEnv. To connect from outside the sandbox use HostExternal and PortExternal."
      - "CARD_3_CONNECTIONINFO=Username,${OSGS_USERNAME};Password,${OSGS_PASSWORD};Database name,${OSGS_DB_NAME};Host,postgis-container;Port,5432;HostExternal, localhost;PortExternal,${OSGS_POSTGIS_PORT}"
      - "CARD_4_TITLE=Geoserver"
      - "CARD_4_DESCRIPTION=Geoserver implements OGC web services like WMS and WFS, similar to alternatives like MapServer or QGISserver. A community extension is activated to provide functionalities of the new OGC API standard.  Access to host file system is possible through ${OSGS_HOST_MOUNT_FOLDER_NAME:-your_computer} in GeoServer's data directory. To connect from outside the sandbox use HostExternal and PortExternal."
      - "CARD_4_HREF=Open,/geoserver/web/"
      - "CARD_4_CONNECTIONINFO=Username,${GEOSERVER_ADMIN_USER:-gis};Password,${GEOSERVER_ADMIN_PASSWORD:-gis};Host,geoserver-container;Port,8080;HostExternal, localhost;PortExternal,${GEOSERVER_PORT_EXTERNAL:-8003}"
      - "CARD_5_TITLE=Openlayers"
      - "CARD_5_DESCRIPTION=Openlayers is a javascript library for interactive maps in the browser, similar Leaflet, Mapblibre or Mapbox GL JS. Why not try to expose your data as WMS in Geoserver and display it here? Use HostExternal and PortExternal, because this jsfiddle is hosted outside of the sandbox."
      - "CARD_5_HREF=Open,${OSGS_JSFIDDLE_URL}"
