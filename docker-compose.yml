# Explicitly using v2 because this stack is NOT intended to be run in any decentralized manner.
version: "2.4"

volumes:
  # Persists all geoserver related data and configuration.
  geoserver_data:
  # Persists database content.
  postgis_data:
  # Persists database connections and settings.
  pgadmin_data:
  # Persists home directory with all notebook and user created content.
  jupyterlabgeoenv_data:
  # Persists packages downloaded for requirements-override.txt to restore from
  # in case of no internet connection.
  jupyterlabgeoenv_pip_overwrite_download:
  # Persists JupyterLab application, user and workspaces settings.
  jupyterlabgeoenv_settings_application:
  jupyterlabgeoenv_settings_user:
  jupyterlabgeoenv_settings_workspace:
  # Used to share data from content container with other components.
  content_data:

services:
  postgis:
    container_name: postgis-container
    image: postgis/postgis:${POSTGIS_VERSION_TAG:-14-3.2-alpine}
    volumes:
      - postgis_data:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:${POSTGIS_PORT_EXTERNAL:-8001}:5432
    environment:
      - "PGUSER=${POSTGRES_USER:-gis}"
      - "POSTGRES_USER=${POSTGRES_USER:-gis}"
      - "POSTGRES_DB=${POSTGRES_DB:-gis}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-gis}"
    shm_size: 256MB

  geoserver:
    container_name: geoserver-container
    image: kartoza/geoserver:${GEOSERVER_VERSION:-2.20.1}
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
      - content_data:/opt/geoserver/data_dir/${CONTENT_MOUNT_FOLDER_NAME:-_content}
      - ${HOST_SYSTEM_MOUNT_PATH:-./}:/opt/geoserver/data_dir/${HOST_MOUNT_FOLDER_NAME:-_host_mount_dir}
    ports:
      - 127.0.0.1:${GEOSERVER_PORT_EXTERNAL:-8003}:8080
    environment:
      - "GEOSERVER_DATA_DIR=/opt/geoserver/data_dir"
      - "GEOWEBCACHE_CACHE_DIR=/opt/geoserver/data_dir/gwc"
      - "GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD:-gis}"
      - "GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER:-gis}"
      - "MAXIMUM_MEMORY=${GEOSERVER_MAXIMUM_MEMORY:-6G}"
      - "SAMPLE_DATA=${GEOSERVER_SAMPLE_DATA:-true}"
      - "STABLE_EXTENSIONS=${GEOSERVER_STABLE_EXTENSIONS:-}"
      - "COMMUNITY_EXTENSIONS=${GEOSERVER_COMMUNITY_EXTENSIONS:-geostyler-plugin,ogcapi-plugin}"
      - "TOMCAT_EXTRAS=false"
      - "ROOT_WEBAPP_REDIRECT=true"

  pgadmin:
    container_name: pgadmin-container
    image: "dpage/pgadmin4:${PGADMIN_VERSION_TAG:-6.8}"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - 127.0.0.1:${PGADMIN_PORT_EXTERNAL:-8002}:80
    environment:
      - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-gis@gis.com}"
      - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-gis}"

  jupyterlabgeoenv:
    container_name: jupyterlabgeoenv-container
    # build: ./jupyterlabgeoenv/
    image: ghcr.io/laiskasiili/os_gis_sandbox/jupyterlabgeoenv:${JUPYTERLABGEOENV_VERSION:-jupyterlabgeoenv-v1.0.4}
    volumes:
      - jupyterlabgeoenv_data:/home
      - jupyterlabgeoenv_settings_application:/usr/local/share/jupyter/lab
      - jupyterlabgeoenv_settings_user:/root/.jupyter/lab/user-settings
      - jupyterlabgeoenv_settings_workspace:/root/.jupyter/lab/workspaces
      - jupyterlabgeoenv_pip_overwrite_download:/pip_overwrite_requirements_download
      - content_data:/home/${CONTENT_MOUNT_FOLDER_NAME:-_content}
      - ${HOST_SYSTEM_MOUNT_PATH:-./}:/home/${HOST_MOUNT_FOLDER_NAME:-_host_mount_dir}
    ports:
      - 127.0.0.1:${JUPYTERLABGEOENV_PORT_EXTERNAL:-8004}:8888
    environment:
      - "HOME_DIR_PERSISTED=true"
    command:
      [
        "jupyter",
        "lab",
        "--ip",
        "0.0.0.0",
        "--port",
        "8888",
        "--allow-root",
        "--no-browser",
        "--autoreload",
        "--LabApp.token=''",
      ]

  content:
    container_name: content-container
    # build: ./content/
    image: ghcr.io/laiskasiili/os_gis_sandbox/content:${CONTENT_VERSION_TAG:-content-v1.0.2}
    volumes:
      - content_data:/shared_content

  hub:
    container_name: hub-container
    # build: ./hub/
    image: ghcr.io/laiskasiili/os_gis_sandbox/hub:${HUB_VERSION:-hub-v1.0.1}
    ports:
      - 127.0.0.1:${HUB_PORT_EXTERNAL:-80}:5000
    command:
      [
        "gunicorn",
        "--workers",
        "2",
        "--threads",
        "2",
        "--bind",
        "0.0.0.0:5000",
        "app:app",
      ]
    environment:
      - "CARD_1_TITLE=JupyterLab-GeoEnv"
      - "CARD_1_DESCRIPTION=A JupyterLab environment pre-configured to explore GDAL's capabilities and the Python geo-ecosystem. Data stories and more content is located in directory ${CONTENT_MOUNT_FOLDER_NAME:-_content}. Access to host file system is possible through ${HOST_MOUNT_FOLDER_NAME:-_host_mount_dir}. Start-up might take some seconds, be patient."
      - "CARD_1_HREF=Open,http://localhost:${JUPYTERLABGEOENV_PORT_EXTERNAL:-8004}"
      - "CARD_2_TITLE=pgAdmin"
      - "CARD_2_DESCRIPTION=pgAdmin provides a graphical user interface to interact with PostgreSQL/PostGIS databases."
      - "CARD_2_HREF=Open,http://localhost:${PGADMIN_PORT_EXTERNAL:-8002}"
      - "CARD_2_CONNECTIONINFO=Email,${PGADMIN_DEFAULT_EMAIL:-gis@gis.com};Password,${PGADMIN_DEFAULT_PASSWORD:-gis}"
      - "CARD_3_TITLE=PostGIS"
      - "CARD_3_DESCRIPTION=PostGIS is an extension for postgreSQL that turns it into a spatial database. To interact use pgAdmin or psql from the terminal of JupyterLab-GeoEnv. To connect from outside the sandbox use HostExternal and PortExternal."
      - "CARD_3_CONNECTIONINFO=Username,${POSTGRES_USER:-gis};Password,${POSTGRES_PASSWORD:-gis};Database name,${POSTGRES_DB:-gis};Host,postgis-container;Port,5432;HostExternal, localhost;PortExternal,${POSTGIS_PORT_EXTERNAL:-8001}"
      - "CARD_4_TITLE=Geoserver"
      - "CARD_4_DESCRIPTION=Geoserver implements OGC web services like WMS and WFS, similar to alternatives like MapServer or QGISserver. A community extension is activated to provide functionalities of the new OGC API standard.  Access to host file system is possible through ${HOST_MOUNT_FOLDER_NAME:-_host_mount_dir} in GeoServer's data directory. To connect from outside the sandbox use HostExternal and PortExternal."
      - "CARD_4_HREF=Open,http://localhost:${GEOSERVER_PORT_EXTERNAL:-8003}/geoserver/web"
      - "CARD_4_CONNECTIONINFO=Username,${GEOSERVER_ADMIN_USER:-gis};Password,${GEOSERVER_ADMIN_PASSWORD:-gis};Host,geoserver-container;Port,8080;HostExternal, localhost;PortExternal,${GEOSERVER_PORT_EXTERNAL:-8003}"
      - "CARD_5_TITLE=Openlayers"
      - "CARD_5_DESCRIPTION=Openlayers is a javascript library for interactive maps in the browser, similar to alternatives like Leaflet. It can be used to consume OGC web services such as WMS. We refer to codesandbox.io, an awesome online code editor that takes care of the nitty gritty details of modern web development."
      - "CARD_5_HREF=Open,https://codesandbox.io/s/sharp-thunder-1xbl0?file=/map.js"
