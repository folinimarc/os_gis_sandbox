# Explicitly use v2 because this stack is NOT intended to be run in any decentralized manner.
version: '2.4'

volumes:
   geoserver-data:
   postgis-data:
   pgadmin-data:
   geoscriptingsandbox-data:
   datastories-data:

services:
    postgis:
      container_name: postgis
      image: postgis/postgis:${POSTGIS_VERSION_TAG}
      volumes:
         - postgis-data:/var/lib/postgresql/data
      ports:
        - 127.0.0.1:${POSTGIS_PORT_EXTERNAL}:5432
      environment:
        - "PGUSER=${POSTGRES_USER}"
        - "POSTGRES_USER=${POSTGRES_USER}"
        - "POSTGRES_DB=${POSTGRES_DB}"
        - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      restart: always
      shm_size: 256MB

    geoserver:
      container_name: geoserver
      image: kartoza/geoserver:${GS_VERSION}
      volumes:
        - geoserver-data:/opt/geoserver/data_dir
        - datastories-data:/opt/geoserver/data_dir/${DATASTORIES_MOUNT_FOLDER_NAME}
        - ${HOST_SYSTEM_MOUNT_PATH}:/opt/geoserver/data_dir/${HOST_MOUNT_FOLDER_NAME}
      ports:
        - 127.0.0.1:${GEOSERVER_PORT_EXTERNAL}:8080
      restart: always
      environment:
        - "GEOSERVER_DATA_DIR=/opt/geoserver/data_dir"
        - "GEOWEBCACHE_CACHE_DIR=/opt/geoserver/data_dir/gwc"
        - "GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}"
        - "GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}"
        - "INITIAL_MEMORY=${INITIAL_MEMORY}"
        - "MAXIMUM_MEMORY=${MAXIMUM_MEMORY}"
        - "SAMPLE_DATA=${SAMPLE_DATA}"
        - "STABLE_EXTENSIONS=${STABLE_EXTENSIONS}"
        - "COMMUNITY_EXTENSIONS=${COMMUNITY_EXTENSIONS}"
        - "TOMCAT_EXTRAS=${TOMCAT_EXTRAS}"
        - "ROOT_WEBAPP_REDIRECT=true"

    pgadmin:
      container_name: pgadmin
      image: "dpage/pgadmin4:${PGADMIN_VERSION_TAG}"
      volumes:
        - pgadmin-data:/var/lib/pgadmin
      ports:
        - 127.0.0.1:${PGADMIN_PORT_EXTERNAL}:80
      restart: always
      environment:
        - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
        - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"

    geoscriptingsandbox:
      container_name: geoscriptingsandbox
      image: ghcr.io/laiskasiili/os_geostack_sandbox/geoscriptingsandbox:${GEOSCRIPTINGSANDBOX_VERSION}
      volumes:
        - geoscriptingsandbox-data:/geo
        - datastories-data:/geo/${DATASTORIES_MOUNT_FOLDER_NAME}
        - ${HOST_SYSTEM_MOUNT_PATH}:/geo/${HOST_MOUNT_FOLDER_NAME}
      ports:
        - 127.0.0.1:${GEOSCRIPTINGSANDBOX_PORT_EXTERNAL}:8888
      restart: always
      command: ["jupyter", "lab", "--ip", "0.0.0.0", "--port", "8888", "--allow-root", "--no-browser", "--autoreload", "--LabApp.token=''"]

    datastories:
      container_name: datastories
      # build: ./datastories/
      image: ghcr.io/laiskasiili/os_geostack_sandbox/datastories:${DATASTORIES_VERSION_TAG}
      volumes:
        - datastories-data:/datastories
      restart: always

    hub:
      container_name: hub
      # build: ./hub/
      image: ghcr.io/laiskasiili/os_geostack_sandbox/hub:${HUB_VERSION}
      ports:
        - 127.0.0.1:${HUB_PORT_EXTERNAL}:5000
      restart: always
      command: ["gunicorn" ,"--workers", "2", "--threads", "2", "--bind", "0.0.0.0:5000", "app:app"]
      environment:
        - "CARD_1_TITLE=Geoscripting sandbox"
        - "CARD_1_DESCRIPTION=This is a pre-configured local JupyterLab environment to explore the python geo-ecosystem and use GDAL commands like ogr2ogr. Here you also find tutorial notebooks as well as the datastories."
        - "CARD_1_HREF=http://localhost:${GEOSCRIPTINGSANDBOX_PORT_EXTERNAL}"
        - "CARD_2_TITLE=Database client"
        - "CARD_2_DESCRIPTION=pgAdmin provides a graphical user interface to interact with PostgreSQL databases."
        - "CARD_2_HREF=http://localhost:${PGADMIN_PORT_EXTERNAL}"
        - "CARD_2_KEYVALUE=Email,${PGADMIN_DEFAULT_EMAIL};Password,${PGADMIN_DEFAULT_PASSWORD}"
        - "CARD_3_TITLE=Spatial database"
        - "CARD_3_DESCRIPTION=Postgis is an extension for storing and processing of spatial data in postgreSQL. To interact use pgAdmin or the psql command from the terminal in the geoscripting sandbox. To connect from outside the sandbox use HostExternal and PortExternal."
        - "CARD_3_KEYVALUE=Username,${POSTGRES_USER};Password,${POSTGRES_PASSWORD};Database name,${POSTGRES_DB};Host,postgis;Port,5432;HostExternal, localhost;PortExternal,${POSTGIS_PORT_EXTERNAL}"
        - "CARD_4_TITLE=OGC Data Server"
        - "CARD_4_DESCRIPTION=Geoserver implements established OGC web services like WMS and WFS. A community extension is activated to provide functionality of the new OGC API standard. To connect from outside the sandbox use HostExternal and PortExternal."
        - "CARD_4_HREF=http://localhost:${GEOSERVER_PORT_EXTERNAL}/geoserver/web"
        - "CARD_4_KEYVALUE=Username,${GEOSERVER_ADMIN_USER};Password,${GEOSERVER_ADMIN_PASSWORD};Host,geoserver;Port,8080;HostExternal, localhost;PortExternal,${GEOSERVER_PORT_EXTERNAL}"
        - "CARD_5_TITLE=Webclient sandbox"
        - "CARD_5_DESCRIPTION=Openlayers is a javascript library for interactive maps in the browser. As it speaks OGC standards it can talk to a geoserver. We use codesandbox.io, an awesome online code editor that takes care of the nitty gritty details of modern web development."
        - "CARD_5_HREF=https://codesandbox.io/s/sharp-thunder-1xbl0?file=/map.js"
