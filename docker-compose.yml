# Explicitly use v2 because this stack is NOT intended to be run in any decentralized manner.
version: '2.4'

volumes:
   geoserver-data:
   postgis-data:
   pgadmin-data:
   geoscriptingsandbox-data:

services:
    postgis:
      container_name: postgis-container
      image: postgis/postgis:${POSTGIS_VERSION_TAG}
      volumes:
         - postgis-data:/var/lib/postgresql/data
      environment:
        - "PGUSER=${POSTGRES_USER}"
        - "POSTGRES_USER=${POSTGRES_USER}"
        - "POSTGRES_DB=${POSTGRES_DB}"
        - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      restart: on-failure
      shm_size: 256MB
      mem_limit: ${POSTGRES_CONTAINER_MEMLIMIT}
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 10s
        timeout: 5s
        retries: 3

    geoserver:
      container_name: geoserver-container
      image: kartoza/geoserver:${GS_VERSION}
      volumes:
        - geoserver-data:${GEOSERVER_DATA_DIR}
        - ${GEOSERVER_HOST_MOUNT_PATH}:${GEOSERVER_DATA_DIR}/host_mount_dir
      ports:
        - 127.0.0.1:${GEOSERVER_PORT}:8080
      restart: on-failure
      environment:
        - "GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}"
        - "GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}"
        - "GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}"
        - "GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}"
        - "INITIAL_MEMORY=${INITIAL_MEMORY}"
        - "MAXIMUM_MEMORY=${MAXIMUM_MEMORY}"
        - "SAMPLE_DATA=${SAMPLE_DATA}"
        - "COMMUNITY_EXTENSIONS=${COMMUNITY_EXTENSIONS}"
        - "TOMCAT_EXTRAS=${TOMCAT_EXTRAS}"
        - "ROOT_WEBAPP_REDIRECT=${ROOT_WEBAPP_REDIRECT}"
      mem_limit: ${GEOSERVER_CONTAINER_MEMLIMIT}
      healthcheck:
        test: "curl --fail -s http://localhost:8080/geoserver/web || exit 1"
        interval: 10s
        timeout: 10s
        retries: 3

    pgadmin:
      container_name: pgadmin-container
      image: "dpage/pgadmin4:${PGADMIN_VERSION_TAG}"
      volumes:
        - pgadmin-data:/var/lib/pgadmin
      ports:
        - 127.0.0.1:${PGADMIN_PORT}:80
      restart: on-failure
      environment:
        - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
        - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"
      mem_limit: ${PGADMIN_CONTAINER_MEMLIMIT}
      healthcheck:
        test: "wget --spider -q http://localhost:80/ || exit 1"
        interval: 10s
        timeout: 10s
        retries: 3

    geoscriptingsandbox:
      container_name: geoscriptingsandbox-container
      image: ghcr.io/laiskasiili/os_geostack_sandbox/geoscriptingsandbox:${GEOSCRIPTINGSANDBOX_VERSION}
      volumes:
        - ${JUPYTERLAB_HOST_MOUNT_PATH}:/geo/host_mount_dir
        - geoscriptingsandbox-data:/geo
      ports:
        - 127.0.0.1:${JUPYTERLAB_PORT}:8888
      restart: on-failure
      mem_limit: ${JUPYTERLAB_CONTAINER_MEMLIMIT}
      command: "jupyter lab --ip=0.0.0.0 --port=8888 --allow-root --no-browser --autoreload --LabApp.token=''"

    hub:
      container_name: hub-container
      image: ghcr.io/laiskasiili/os_geostack_sandbox/hub:${HUB_VERSION}
      ports:
        - 127.0.0.1:${FLASK_PORT}:5000
      restart: on-failure
      mem_limit: ${FLASK_CONTAINER_MEMLIMIT}
      environment:
        - "CARD_0_TITLE=Geoscripting sandbox"
        - "CARD_0_DESCRIPTION=Jupyterlab provides an environment with opensource geoprocessing tools pre-installed. Run GDAL terminal commands, use ogr2ogr to load data into postgis and explore the python geo-ecosystem. Provides also a directory host_mount_dir that is mounted to the host file system for easy data access."
        - "CARD_0_HREF=http://localhost:${JUPYTERLAB_PORT}"
        - "CARD_1_TITLE=Database client"
        - "CARD_1_DESCRIPTION=PGadmin provides a nice user interface to interact with databases."
        - "CARD_1_HREF=http://localhost:${PGADMIN_PORT}"
        - "CARD_1_KEYVALUE=Email,${PGADMIN_DEFAULT_EMAIL};Password,${PGADMIN_DEFAULT_PASSWORD}"
        - "CARD_2_TITLE=Spatial database"
        - "CARD_2_DESCRIPTION=Postgis is a postgres extension for storing and processing of spatial data. Use pgadmin to connect and interact or use psql command from the terminal in the geoscripting sandbox."
        - "CARD_2_KEYVALUE=Host,postgis-container;Port,5432;Username,${POSTGRES_USER};Password,${POSTGRES_PASSWORD};DB name,${POSTGRES_DB}"
        - "CARD_3_TITLE=OGC-Server"
        - "CARD_3_DESCRIPTION=Geoserver is an OGC compliant server to provide services like WMS and WFS. Because of the OGC standards, these services can be consumed by any other OGC compliant software. In Geoserver's data directory there is a host_mount_dir directory that is mounted to the host file system for easy data access."
        - "CARD_3_HREF=http://localhost:${GEOSERVER_PORT}/geoserver/web"
        - "CARD_3_KEYVALUE=Username,${GEOSERVER_ADMIN_USER};Password,${GEOSERVER_ADMIN_PASSWORD}"
        - "CARD_4_TITLE=Webclient sandbox"
        - "CARD_4_DESCRIPTION=Openlayers is a javascript library for interactive maps in the browser. As it speaks OGC standards it can talk to a geoserver. We use codesandbox.io, an awesome online code editor that takes care of the nitty gritty details of modern web development."
        - "CARD_4_HREF=https://codesandbox.io/s/sharp-thunder-1xbl0"
